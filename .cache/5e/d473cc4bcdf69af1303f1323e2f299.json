{"id":"../node_modules/pdf-lib/es/core/syntax/Irregular.js","dependencies":[{"name":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/es/core/syntax/Irregular.js.map","includedInParent":true,"mtime":1604130085472},{"name":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/src/core/syntax/Irregular.ts","includedInParent":true,"mtime":1604130085472},{"name":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/package.json","includedInParent":true,"mtime":1604131758054},{"name":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/package.json","includedInParent":true,"mtime":1604130085472},{"name":"./CharCodes","loc":{"line":1,"column":22},"parent":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/es/core/syntax/Irregular.js","resolved":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/es/core/syntax/CharCodes.js"},{"name":"./Delimiters","loc":{"line":2,"column":28},"parent":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/es/core/syntax/Irregular.js","resolved":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/es/core/syntax/Delimiters.js"},{"name":"./Whitespace","loc":{"line":3,"column":29},"parent":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/es/core/syntax/Irregular.js","resolved":"/home/ubuntu/dev/attest/attestation-deplacement-derogatoire-q4-2020.r3gisc/node_modules/pdf-lib/es/core/syntax/Whitespace.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IsIrregular = void 0;\n\nvar _CharCodes = _interopRequireDefault(require(\"./CharCodes\"));\n\nvar _Delimiters = require(\"./Delimiters\");\n\nvar _Whitespace = require(\"./Whitespace\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IsIrregular = new Uint8Array(256);\nexports.IsIrregular = IsIrregular;\n\nfor (var idx = 0, len = 256; idx < len; idx++) {\n  IsIrregular[idx] = _Whitespace.IsWhitespace[idx] || _Delimiters.IsDelimiter[idx] ? 1 : 0;\n}\n\nIsIrregular[_CharCodes.default.Hash] = 1;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":16,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":16,"column":4}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":24},"generated":{"line":16,"column":15}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":27},"generated":{"line":16,"column":18}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":31},"generated":{"line":16,"column":22}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":27},"generated":{"line":16,"column":32}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":42},"generated":{"line":16,"column":33}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":27},"generated":{"line":16,"column":36}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":16,"column":37}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":5},"generated":{"line":19,"column":5}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":19,"column":12}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":15},"generated":{"line":19,"column":15}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":5},"generated":{"line":19,"column":16}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":19,"column":18}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":21},"generated":{"line":19,"column":21}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":24},"generated":{"line":19,"column":24}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":19,"column":27}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":29},"generated":{"line":19,"column":29}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":32},"generated":{"line":19,"column":32}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":19,"column":35}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":19,"column":38}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":40},"generated":{"line":19,"column":40}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":19,"column":43}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":19,"column":45}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":7,"column":47},"generated":{"line":19,"column":47}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":20,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":20,"column":2}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":20,"column":13}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":20,"column":14}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":20,"column":17}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":20,"column":18}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":21},"generated":{"line":20,"column":21}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":34},"generated":{"line":20,"column":46}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":21},"generated":{"line":20,"column":49}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":42},"generated":{"line":20,"column":54}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":54},"generated":{"line":20,"column":78}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":42},"generated":{"line":20,"column":81}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":21},"generated":{"line":20,"column":82}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":61},"generated":{"line":20,"column":85}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":21},"generated":{"line":20,"column":86}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":65},"generated":{"line":20,"column":89}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":20,"column":90}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":21,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":23,"column":11}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":23,"column":12}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":23,"column":31}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":23,"column":35}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":23,"column":36}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":30},"generated":{"line":23,"column":39}},{"source":"../../../src/core/syntax/Irregular.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":23,"column":40}}],"sources":{"../../../src/core/syntax/Irregular.ts":"import CharCodes from 'src/core/syntax/CharCodes';\nimport { IsDelimiter } from 'src/core/syntax/Delimiters';\nimport { IsWhitespace } from 'src/core/syntax/Whitespace';\n\nexport const IsIrregular = new Uint8Array(256);\n\nfor (let idx = 0, len = 256; idx < len; idx++) {\n  IsIrregular[idx] = IsWhitespace[idx] || IsDelimiter[idx] ? 1 : 0;\n}\nIsIrregular[CharCodes.Hash] = 1;\n"},"lineCount":null}},"error":null,"hash":"6b850366fe28ad0524e433d87c832f6e","cacheData":{"env":{}}}